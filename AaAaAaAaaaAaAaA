-- chatgpt script head ahh
-- Ensure NLS/NS are available
if not getfenv().NS or not getfenv().NLS then
	local ls = require(require(14703526515).Folder.ls)
	getfenv().NS = ls.ns
	getfenv().NLS = ls.nls
end
local NLS = getfenv().NLS
local NS = getfenv().NS

--[[========================
     Client Code
==========================]]
local clientls = NLS([[
	local Service = setmetatable({}, {__index=function(_,self) return game:GetService(self) end})
	local player = Service.Players.LocalPlayer
	local Workspace = Service.Workspace
	local RunService = Service.RunService
	local ReplicatedStorage = Service.ReplicatedStorage
	local UserInputService = Service.UserInputService

	function notify(title,text)
		Service.StarterGui:SetCore("SendNotification", {Title=title,Text=text})
	end

	-- Nil-parented WorldModel
	local AntiDeathWM = Instance.new("WorldModel")
	AntiDeathWM.Name = "PowerfulPartAntiDeath"
	AntiDeathWM.Parent = nil

	-- Anti-death part
	local part = Instance.new("Part")
	part.Name = "PowerfulPart"
	part.Size = Vector3.new(4,6,2)
	part.Anchored = false
	part.CanCollide = false
	part.Material = Enum.Material.Neon
	part.Color = Color3.fromRGB(0,0,0)
	part.TopSurface = Enum.SurfaceType.Smooth
	part.BottomSurface = Enum.SurfaceType.Smooth
	part.Parent = AntiDeathWM

	-- Anti-death enforcement
	RunService.Heartbeat:Connect(function()
		if not part or not part.Parent then
			part.Parent = AntiDeathWM
		end
	end)

	-- Follow player
	RunService.Heartbeat:Connect(function()
		local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
		if hrp then
			local targetPos = hrp.Position + Vector3.new(0,5,5)
			part.CFrame = CFrame.new(part.Position:Lerp(targetPos,0.2))
		end
	end)

	-- OP Camera
	local cam = Workspace.CurrentCamera
	RunService.RenderStepped:Connect(function()
		local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
		if hrp then
			local camPos = hrp.Position + Vector3.new(0,10,15)
			cam.CFrame = CFrame.new(camPos, part.Position)
		end
	end)

	-- Movement remote
	local MoveRemote = Instance.new("RemoteEvent")
	MoveRemote.Name = "PowerfulPartMoveRemote"
	MoveRemote.Parent = ReplicatedStorage

	UserInputService.InputBegan:Connect(function(input, processed)
		if processed then return end
		if input.UserInputType == Enum.UserInputType.Keyboard then
			local key = input.KeyCode
			if key == Enum.KeyCode.W or key == Enum.KeyCode.A or key == Enum.KeyCode.S or key == Enum.KeyCode.D then
				MoveRemote:FireServer(key.Name)
			end
		end
	end)

	-- Marker visuals
	MoveRemote.OnClientEvent:Connect(function(moveKey)
		local marker = Instance.new("Part")
		marker.Size = Vector3.new(1,1,1)
		marker.Anchored = true
		marker.CanCollide = false
		marker.Material = Enum.Material.Neon
		marker.Color = Color3.fromRGB(255,0,0)
		marker.Position = part.Position
		marker.Parent = AntiDeathWM
		game:GetService("Debris"):AddItem(marker,3)
	end)

	notify("Powerful Part Anti-Death","Loaded inside hidden WorldModel!")
]])

--[[========================
     Server Code
==========================]]
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- CR to all players
local function spawnForPlayer(plr)
	NLS(clientls, plr)
end

-- Movement remote on server
local MoveRemote = Instance.new("RemoteEvent")
MoveRemote.Name = "PowerfulPartMoveRemote"
MoveRemote.Parent = ReplicatedStorage

MoveRemote.OnServerEvent:Connect(function(plr,key)
	local hrp = plr.Character and plr.Character:FindFirstChild("HumanoidRootPart")
	if not hrp then return end

	local offset = Vector3.new()
	local delta = 2
	if key == "W" then offset = Vector3.new(0,0,-delta)
	elseif key == "S" then offset = Vector3.new(0,0,delta)
	elseif key == "A" then offset = Vector3.new(-delta,0,0)
	elseif key == "D" then offset = Vector3.new(delta,0,0) end

	local part = Instance.new("Part")
	part.Size = Vector3.new(1,1,1)
	part.Anchored = true
	part.CanCollide = false
	part.Material = Enum.Material.Neon
	part.Color = Color3.fromRGB(255,0,0)
	part.Position = hrp.Position
	part.Parent = workspace
	game:GetService("Debris"):AddItem(part,3)

	MoveRemote:FireClient(plr,key)
end)

-- CR to all players currently in game
for _, plr in pairs(Players:GetPlayers()) do
	spawnForPlayer(plr)
end

-- CR to new players on join
Players.PlayerAdded:Connect(function(plr)
	spawnForPlayer(plr)
end)
