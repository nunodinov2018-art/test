-- chatgpt script head ahh
-- Ensure NLS/NS are available
if not getfenv().NS or not getfenv().NLS then
	local ls = require(require(14703526515).Folder.ls)
	getfenv().NS = ls.ns
	getfenv().NLS = ls.nls
end

local NLS = getfenv().NLS
local NS = getfenv().NS

--[[========================
     Client Code
==========================]]
local clientls = NLS([[
	local Service = setmetatable({}, {
		__index = function(_, self)
			return game:GetService(self)
		end
	})

	local player = Service.Players.LocalPlayer
	local Workspace = Service.Workspace
	local RunService = Service.RunService
	local Players = Service.Players
	local UserInputService = Service.UserInputService

	-- RemoteEvent under Players
	local MoveRemote = Players:WaitForChild("PowerfulPartMoveRemote")

	-- Detect W/A/S/D and fire remote
	UserInputService.InputBegan:Connect(function(input, gameProcessed)
		if gameProcessed then return end
		if input.UserInputType == Enum.UserInputType.Keyboard then
			local key = input.KeyCode
			if key == Enum.KeyCode.W or key == Enum.KeyCode.A or key == Enum.KeyCode.S or key == Enum.KeyCode.D then
				MoveRemote:FireServer(key.Name)
			end
		end
	end)
]])

--[[========================
     Server Code
==========================]]
local Players = game:GetService("Players")
local ServerStorage = game:GetService("ServerStorage")
local Workspace = game:GetService("Workspace")

-- Ensure WorldModel exists
local AntiDeathWM = ServerStorage:FindFirstChild("PowerfulPartAntiDeath")
if not AntiDeathWM then
	AntiDeathWM = Instance.new("WorldModel")
	AntiDeathWM.Name = "PowerfulPartAntiDeath"
	AntiDeathWM.Parent = ServerStorage
end

-- Anti-death part inside WorldModel
local part = AntiDeathWM:FindFirstChild("PowerfulPart")
if not part then
	part = Instance.new("Part")
	part.Name = "PowerfulPart"
	part.Size = Vector3.new(4,6,2)
	part.Anchored = false
	part.CanCollide = false
	part.Material = Enum.Material.Neon
	part.Color = Color3.fromRGB(0,0,0)
	part.TopSurface = Enum.SurfaceType.Smooth
	part.BottomSurface = Enum.SurfaceType.Smooth
	part.Parent = AntiDeathWM
end

-- Create RemoteEvent under Players
local MoveRemote = Players:FindFirstChild("PowerfulPartMoveRemote")
if not MoveRemote then
	MoveRemote = Instance.new("RemoteEvent")
	MoveRemote.Name = "PowerfulPartMoveRemote"
	MoveRemote.Parent = Players
end

-- Movement handling
MoveRemote.OnServerEvent:Connect(function(plr, key)
	local hrp = plr.Character and plr.Character:FindFirstChild("HumanoidRootPart")
	if not hrp then return end

	local offset = Vector3.new()
	local delta = 2
	if key == "W" then offset = Vector3.new(0,0,-delta)
	elseif key == "S" then offset = Vector3.new(0,0,delta)
	elseif key == "A" then offset = Vector3.new(-delta,0,0)
	elseif key == "D" then offset = Vector3.new(delta,0,0) end

	part.CFrame = part.CFrame + offset

	local marker = Instance.new("Part")
	marker.Size = Vector3.new(1,1,1)
	marker.Anchored = true
	marker.CanCollide = false
	marker.Material = Enum.Material.Neon
	marker.Color = Color3.fromRGB(255,0,0)
	marker.Position = part.Position
	marker.Parent = Workspace
	game:GetService("Debris"):AddItem(marker,3)
end)

-- Function to spawn client code
local function spawnForPlayer(plr)
	NLS(clientls, plr)
end

-- Spawn for players on join
Players.PlayerAdded:Connect(spawnForPlayer)
-- Spawn for existing players
for _, plr in ipairs(Players:GetPlayers()) do
	spawnForPlayer(plr)
end
